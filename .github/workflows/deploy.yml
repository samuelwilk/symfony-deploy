name: Symfony CI/CD Zero-Downtime Deploy

on:
  repository_dispatch:
    types: [trigger-deployment]
  push:
    branches: [main, staging]
    tags:
      - 'v*'
      - 'release-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [staging, production]
    if: github.ref_type == 'branch' || github.ref_type == 'tag'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets[format('{0}_SSH_KEY', matrix.environment | upper)] }}

      - name: Deploy to Oracle Cloud (${{ matrix.environment }})
        env:
          HOST: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USER }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          CADDY_MERCURE_JWT_SECRET: ${{ secrets.CADDY_MERCURE_JWT_SECRET }}
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
          APP_ENV: ${{ matrix.environment }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST <<EOF
            set -e
            export RELEASE_ID=release-$(date +%Y%m%d%H%M%S)
            export RELEASE_DIR=/home/$USER/symfony-deploy/releases/\$RELEASE_ID
            export CURRENT_LINK=/home/$USER/symfony-deploy/current

            echo ">>> Cloning new release to \$RELEASE_DIR"
            mkdir -p \$RELEASE_DIR
            git clone --depth=1 --branch ${{ github.ref_name }} https://github.com/${{ github.repository }} \$RELEASE_DIR

            echo ">>> Starting containers for \$RELEASE_ID"
            cd \$RELEASE_DIR

            APP_ENV=$APP_ENV \
            APP_SECRET=$APP_SECRET \
            CADDY_MERCURE_JWT_SECRET=$CADDY_MERCURE_JWT_SECRET \
            SERVER_NAME=$SERVER_NAME \
            docker compose -p \$RELEASE_ID -f compose.yaml -f compose.prod.yaml up -d --wait --build

            # Post-deploy steps here...
            echo ">>> âœ… Deployment complete"
          EOF
      
